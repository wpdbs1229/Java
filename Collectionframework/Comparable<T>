import java.util.*;

class Person implements Comparable<Person>{
	
	String name;
	int age;
	
	public Person(String name, int age) {
		
		this.name = name;
		this.age = age;
	}
	
	public void show() {
		System.out.printf("%s, %d ", name, age );
	}
	
	public int compareTo(Person p) {
		
		if(age == p.age)
			return 0;
		else if(age> p.age)
			return 1;
		else return -1;
	}
}
public class ComparablePerson {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TreeSet<Person> pTree = new TreeSet<Person>();
		
		pTree.add(new Person("James", 20));
		pTree.add(new Person("Park", 14));
		pTree.add(new Person("Kona", 31));
		
		Iterator<Person> itr = pTree.iterator();
		
		while(itr.hasNext())
			itr.next().show();
		
	}
	/*
	 * Park, 14 James, 20 Kona, 31
	 * Person 클래스에 Comparable<T> 인터페이스를 구현하여
	 * 인스턴스 크기비교를 하는 메소드 CompareTo 메소드를 나이에 따라 데이터를 정렬하게
	 * 오버라이딩 하였습니다!
	 * Tree 자료구조 데이터를 정렬하여 저장하는 자료구조이기 때문에 인스턴스에 알맞은 정렬기준을 
	 * 프로그래머가 정의해주어야 합니다. 정의해 줄 때는 위처럼 정렬하고자 하는 클래스에 Comparable<T> 인터페이스를 구현하고
	 * compareTo메소드를 자신이 정한 기준에 맞게 오버라이딩해주면 됩니다!
	 */
}
